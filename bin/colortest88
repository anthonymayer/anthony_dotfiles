#!/usr/bin/perl
# Author: Todd Larason <jtl@molehill.org>
# $XFree86: xc/programs/xterm/vttests/256colors2.pl,v 1.2 2002/03/26 01:46:43 dickey Exp $

# use the resources for colors 0-15 - usually more-or-less a
# reproduction of the standard ANSI colors, but possibly more
# pleasing shades

$RESET = $ARGV[0];
if ( $RESET ) {
	# colors 16-79 are a 4x4x4 color cube
	for ($red = 0; $red < 4; $red++) {
		for ($green = 0; $green < 4; $green++) {
		for ($blue = 0; $blue < 4; $blue++) {
			printf("\x1b]4;%d;rgb:%2.2x/%2.2x/%2.2x\x1b\\",
			16 + ($red * 16) + ($green * 4) + $blue,
			($red ? ($red * 58 + 81) : 0),
			($green ? ($green * 58 + 81) : 0),
			($blue ? ($blue * 58 + 81) : 0));
		}
		}
	}

	# colors 80-88 are a grayscale ramp, intentionally leaving out
	# black and white
	for ($gray = 0; $gray < 8; $gray++) {
		$level = ($gray * 25) + 46;
		printf("\x1b]4;%d;rgb:%2.2x/%2.2x/%2.2x\x1b\\",
		80 + $gray, $level, $level, $level);
	}
}

# display the colors

# first the system ones:
print "System colors:\n";
for ($color = 0; $color < 8; $color++) {
    printf "\x1b[48;5;${color}m %2i ", $color;
}
print "\x1b[0m\n";
for ($color = 8; $color < 16; $color++) {
    printf "\x1b[48;5;${color}m %2i ", $color;
}
print "\x1b[0m\n\n";

# now the color cube
print "Color cube, 4x4x4: (88color)\n";
for ($green = 0; $green < 4; $green++) {
    for ($red = 0; $red < 4; $red++) {
	for ($blue = 0; $blue < 4; $blue++) {
	    $color = 16 + ($red * 16) + ($green * 4) + $blue;
	    printf "\x1b[48;5;${color}m%3i", $color;
	}
	print "\x1b[0m ";
    }
    print "\n";
}


# now the grayscale ramp
print "Grayscale ramp:\n";
for ($color = 80; $color < 88; $color++) {
    printf "\x1b[48;5;${color}m %3i ", $color;
}
print "\x1b[0m\n";
